<?php
/**
 * FeaturesApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  CryptoAPIs
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace CryptoAPIs\Test\Api;

use \CryptoAPIs\Configuration;
use \CryptoAPIs\ApiException;
use \CryptoAPIs\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * FeaturesApiTest Class Doc Comment
 *
 * @category Class
 * @package  CryptoAPIs
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class FeaturesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for broadcastLocallySignedTransaction
     *
     * Broadcast Locally Signed Transaction.
     *
     */
    public function testBroadcastLocallySignedTransaction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateAddress
     *
     * Generate Address.
     *
     */
    public function testGenerateAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEIP1559FeeRecommendations
     *
     * Get EIP 1559 Fee Recommendations.
     *
     */
    public function testGetEIP1559FeeRecommendations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for validateAddress
     *
     * Validate Address.
     *
     */
    public function testValidateAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
